version: '3.8'
services:
  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-enabled:/etc/nginx/conf.d:ro
    depends_on:
      - frontend-service
      - product-service
      - order-service
    networks:
      - microservices-network

  db:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - microservices-network

  frontend-service:
    build:
      context: ./services/frontend-service
    container_name: frontend-service
    command: bash -c "bundle install && bundle exec rails db:create db:migrate && RAILS_ENV=development bundle exec rails s -b '0.0.0.0' -p 3000"
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis
    volumes:
      - ./services/frontend-service:/rails
      - ./config/local/frontend-service.env:/rails/.env
    networks:
      - microservices-network

  product-service:
    build:
      context: ./services/product-service
    container_name: product-service
    command: bash -c "bundle install && bundle exec rails db:create db:migrate && RAILS_ENV=development bundle exec rails s -b '0.0.0.0' -p 3001"
    ports:
      - "3001:3001"
    depends_on:
      - db
      - redis
    volumes:
      - ./services/product-service:/rails
      - ./config/local/product-service.env:/rails/.env
    networks:
      - microservices-network

  order-service:
    build:
      context: ./services/order-service
    container_name: order-service
    command: bash -c "bundle install && bundle exec rails db:create db:migrate && RAILS_ENV=development bundle exec rails s -b '0.0.0.0' -p 3002"
    ports:
      - "3002:3002"
    depends_on:
      - db
      - redis
    volumes:
      - ./services/order-service:/rails
      - ./config/local/order-service.env:/rails/.env
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  postgres_data:
